{"ast":null,"code":"import CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer } from \"../../utils\";\nvar PDFTrailer = /** @class */function () {\n  function PDFTrailer(lastXRefOffset) {\n    this.lastXRefOffset = String(lastXRefOffset);\n  }\n  PDFTrailer.prototype.toString = function () {\n    return \"startxref\\n\" + this.lastXRefOffset + \"\\n%%EOF\";\n  };\n  PDFTrailer.prototype.sizeInBytes = function () {\n    return 16 + this.lastXRefOffset.length;\n  };\n  PDFTrailer.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.s;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.x;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.f;\n    buffer[offset++] = CharCodes.Newline;\n    offset += copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.E;\n    buffer[offset++] = CharCodes.O;\n    buffer[offset++] = CharCodes.F;\n    return offset - initialOffset;\n  };\n  PDFTrailer.forLastCrossRefSectionOffset = function (offset) {\n    return new PDFTrailer(offset);\n  };\n  return PDFTrailer;\n}();\nexport default PDFTrailer;","map":{"version":3,"names":["CharCodes","copyStringIntoBuffer","PDFTrailer","lastXRefOffset","String","prototype","toString","sizeInBytes","length","copyBytesInto","buffer","offset","initialOffset","s","t","a","r","x","e","f","Newline","Percent","E","O","F","forLastCrossRefSectionOffset"],"sources":["C:\\Users\\Uzer\\Desktop\\works\\flyticket\\frontend\\flyticket\\node_modules\\pdf-lib\\src\\core\\document\\PDFTrailer.ts"],"sourcesContent":["import CharCodes from 'src/core/syntax/CharCodes';\r\nimport { copyStringIntoBuffer } from 'src/utils';\r\n\r\nclass PDFTrailer {\r\n  static forLastCrossRefSectionOffset = (offset: number) =>\r\n    new PDFTrailer(offset);\r\n\r\n  private readonly lastXRefOffset: string;\r\n\r\n  private constructor(lastXRefOffset: number) {\r\n    this.lastXRefOffset = String(lastXRefOffset);\r\n  }\r\n\r\n  toString(): string {\r\n    return `startxref\\n${this.lastXRefOffset}\\n%%EOF`;\r\n  }\r\n\r\n  sizeInBytes(): number {\r\n    return 16 + this.lastXRefOffset.length;\r\n  }\r\n\r\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\r\n    const initialOffset = offset;\r\n\r\n    buffer[offset++] = CharCodes.s;\r\n    buffer[offset++] = CharCodes.t;\r\n    buffer[offset++] = CharCodes.a;\r\n    buffer[offset++] = CharCodes.r;\r\n    buffer[offset++] = CharCodes.t;\r\n    buffer[offset++] = CharCodes.x;\r\n    buffer[offset++] = CharCodes.r;\r\n    buffer[offset++] = CharCodes.e;\r\n    buffer[offset++] = CharCodes.f;\r\n    buffer[offset++] = CharCodes.Newline;\r\n\r\n    offset += copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\r\n\r\n    buffer[offset++] = CharCodes.Newline;\r\n    buffer[offset++] = CharCodes.Percent;\r\n    buffer[offset++] = CharCodes.Percent;\r\n    buffer[offset++] = CharCodes.E;\r\n    buffer[offset++] = CharCodes.O;\r\n    buffer[offset++] = CharCodes.F;\r\n\r\n    return offset - initialOffset;\r\n  }\r\n}\r\n\r\nexport default PDFTrailer;\r\n"],"mappings":"AAAA,OAAOA,SAAS;AAChB,SAASC,oBAAoB,QAAE;AAE/B,IAAAC,UAAA;EAME,SAAAA,WAAoBC,cAAsB;IACxC,IAAI,CAACA,cAAc,GAAGC,MAAM,CAACD,cAAc,CAAC;EAC9C;EAEAD,UAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR;IACE,OAAO,gBAAc,IAAI,CAACH,cAAc,YAAS;EACnD,CAAC;EAEDD,UAAA,CAAAG,SAAA,CAAAE,WAAW,GAAX;IACE,OAAO,EAAE,GAAG,IAAI,CAACJ,cAAc,CAACK,MAAM;EACxC,CAAC;EAEDN,UAAA,CAAAG,SAAA,CAAAI,aAAa,GAAb,UAAcC,MAAkB,EAAEC,MAAc;IAC9C,IAAMC,aAAa,GAAGD,MAAM;IAE5BD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACa,CAAC;IAC9BH,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACc,CAAC;IAC9BJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACe,CAAC;IAC9BL,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACgB,CAAC;IAC9BN,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACc,CAAC;IAC9BJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACiB,CAAC;IAC9BP,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACgB,CAAC;IAC9BN,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACkB,CAAC;IAC9BR,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACmB,CAAC;IAC9BT,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACoB,OAAO;IAEpCT,MAAM,IAAIV,oBAAoB,CAAC,IAAI,CAACE,cAAc,EAAEO,MAAM,EAAEC,MAAM,CAAC;IAEnED,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACoB,OAAO;IACpCV,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACqB,OAAO;IACpCX,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACqB,OAAO;IACpCX,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACsB,CAAC;IAC9BZ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACuB,CAAC;IAC9Bb,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGX,SAAS,CAACwB,CAAC;IAE9B,OAAOb,MAAM,GAAGC,aAAa;EAC/B,CAAC;EAzCMV,UAAA,CAAAuB,4BAA4B,GAAG,UAACd,MAAc;IACnD,WAAIT,UAAU,CAACS,MAAM,CAAC;EAAtB,CAAsB;EAyC1B,OAAAT,UAAC;CAAA,CA3CD;AA6CA,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}