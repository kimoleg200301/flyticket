{"ast":null,"code":"import { __extends } from \"tslib\";\nimport pako from 'pako';\nimport { MethodNotImplementedError } from \"../errors\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFStream from \"../objects/PDFStream\";\nimport { Cache } from \"../../utils\";\nvar PDFFlateStream = /** @class */function (_super) {\n  __extends(PDFFlateStream, _super);\n  function PDFFlateStream(dict, encode) {\n    var _this = _super.call(this, dict) || this;\n    _this.computeContents = function () {\n      var unencodedContents = _this.getUnencodedContents();\n      return _this.encode ? pako.deflate(unencodedContents) : unencodedContents;\n    };\n    _this.encode = encode;\n    if (encode) dict.set(PDFName.of('Filter'), PDFName.of('FlateDecode'));\n    _this.contentsCache = Cache.populatedBy(_this.computeContents);\n    return _this;\n  }\n  PDFFlateStream.prototype.getContents = function () {\n    return this.contentsCache.access();\n  };\n  PDFFlateStream.prototype.getContentsSize = function () {\n    return this.contentsCache.access().length;\n  };\n  PDFFlateStream.prototype.getUnencodedContents = function () {\n    throw new MethodNotImplementedError(this.constructor.name, 'getUnencodedContents');\n  };\n  return PDFFlateStream;\n}(PDFStream);\nexport default PDFFlateStream;","map":{"version":3,"names":["pako","MethodNotImplementedError","PDFName","PDFStream","Cache","PDFFlateStream","_super","__extends","dict","encode","_this","call","computeContents","unencodedContents","getUnencodedContents","deflate","set","of","contentsCache","populatedBy","prototype","getContents","access","getContentsSize","length","constructor","name"],"sources":["C:\\Users\\Uzer\\Desktop\\works\\flyticket\\frontend\\flyticket\\node_modules\\pdf-lib\\src\\core\\structures\\PDFFlateStream.ts"],"sourcesContent":["import pako from 'pako';\r\n\r\nimport { MethodNotImplementedError } from 'src/core/errors';\r\nimport PDFDict from 'src/core/objects/PDFDict';\r\nimport PDFName from 'src/core/objects/PDFName';\r\nimport PDFStream from 'src/core/objects/PDFStream';\r\nimport { Cache } from 'src/utils';\r\n\r\nclass PDFFlateStream extends PDFStream {\r\n  protected readonly contentsCache: Cache<Uint8Array>;\r\n  protected readonly encode: boolean;\r\n\r\n  constructor(dict: PDFDict, encode: boolean) {\r\n    super(dict);\r\n\r\n    this.encode = encode;\r\n\r\n    if (encode) dict.set(PDFName.of('Filter'), PDFName.of('FlateDecode'));\r\n    this.contentsCache = Cache.populatedBy(this.computeContents);\r\n  }\r\n\r\n  computeContents = (): Uint8Array => {\r\n    const unencodedContents = this.getUnencodedContents();\r\n    return this.encode ? pako.deflate(unencodedContents) : unencodedContents;\r\n  };\r\n\r\n  getContents(): Uint8Array {\r\n    return this.contentsCache.access();\r\n  }\r\n\r\n  getContentsSize(): number {\r\n    return this.contentsCache.access().length;\r\n  }\r\n\r\n  getUnencodedContents(): Uint8Array {\r\n    throw new MethodNotImplementedError(\r\n      this.constructor.name,\r\n      'getUnencodedContents',\r\n    );\r\n  }\r\n}\r\n\r\nexport default PDFFlateStream;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,SAASC,yBAAyB,QAAE;AAEpC,OAAOC,OAAO;AACd,OAAOC,SAAS;AAChB,SAASC,KAAK,QAAE;AAEhB,IAAAC,cAAA,0BAAAC,MAAA;EAA6BC,SAAA,CAAAF,cAAA,EAAAC,MAAA;EAI3B,SAAAD,eAAYG,IAAa,EAAEC,MAAe;IAA1C,IAAAC,KAAA,GACEJ,MAAA,CAAAK,IAAA,OAAMH,IAAI,CAAC;IAQbE,KAAA,CAAAE,eAAe,GAAG;MAChB,IAAMC,iBAAiB,GAAGH,KAAI,CAACI,oBAAoB,EAAE;MACrD,OAAOJ,KAAI,CAACD,MAAM,GAAGT,IAAI,CAACe,OAAO,CAACF,iBAAiB,CAAC,GAAGA,iBAAiB;IAC1E,CAAC;IATCH,KAAI,CAACD,MAAM,GAAGA,MAAM;IAEpB,IAAIA,MAAM,EAAED,IAAI,CAACQ,GAAG,CAACd,OAAO,CAACe,EAAE,CAAC,QAAQ,CAAC,EAAEf,OAAO,CAACe,EAAE,CAAC,aAAa,CAAC,CAAC;IACrEP,KAAI,CAACQ,aAAa,GAAGd,KAAK,CAACe,WAAW,CAACT,KAAI,CAACE,eAAe,CAAC;;EAC9D;EAOAP,cAAA,CAAAe,SAAA,CAAAC,WAAW,GAAX;IACE,OAAO,IAAI,CAACH,aAAa,CAACI,MAAM,EAAE;EACpC,CAAC;EAEDjB,cAAA,CAAAe,SAAA,CAAAG,eAAe,GAAf;IACE,OAAO,IAAI,CAACL,aAAa,CAACI,MAAM,EAAE,CAACE,MAAM;EAC3C,CAAC;EAEDnB,cAAA,CAAAe,SAAA,CAAAN,oBAAoB,GAApB;IACE,MAAM,IAAIb,yBAAyB,CACjC,IAAI,CAACwB,WAAW,CAACC,IAAI,EACrB,sBAAsB,CACvB;EACH,CAAC;EACH,OAAArB,cAAC;AAAD,CAAC,CAhC4BF,SAAS;AAkCtC,eAAeE,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}