{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroField from \"./PDFAcroField\";\nimport PDFWidgetAnnotation from \"../annotation/PDFWidgetAnnotation\";\nimport { IndexOutOfBoundsError } from \"../errors\";\nvar PDFAcroTerminal = /** @class */function (_super) {\n  __extends(PDFAcroTerminal, _super);\n  function PDFAcroTerminal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroTerminal.prototype.FT = function () {\n    var nameOrRef = this.getInheritableAttribute(PDFName.of('FT'));\n    return this.dict.context.lookup(nameOrRef, PDFName);\n  };\n  PDFAcroTerminal.prototype.getWidgets = function () {\n    var kidDicts = this.Kids();\n    // This field is itself a widget\n    if (!kidDicts) return [PDFWidgetAnnotation.fromDict(this.dict)];\n    // This field's kids are its widgets\n    var widgets = new Array(kidDicts.size());\n    for (var idx = 0, len = kidDicts.size(); idx < len; idx++) {\n      var dict = kidDicts.lookup(idx, PDFDict);\n      widgets[idx] = PDFWidgetAnnotation.fromDict(dict);\n    }\n    return widgets;\n  };\n  PDFAcroTerminal.prototype.addWidget = function (ref) {\n    var Kids = this.normalizedEntries().Kids;\n    Kids.push(ref);\n  };\n  PDFAcroTerminal.prototype.removeWidget = function (idx) {\n    var kidDicts = this.Kids();\n    if (!kidDicts) {\n      // This field is itself a widget\n      if (idx !== 0) throw new IndexOutOfBoundsError(idx, 0, 0);\n      this.setKids([]);\n    } else {\n      // This field's kids are its widgets\n      if (idx < 0 || idx > kidDicts.size()) {\n        throw new IndexOutOfBoundsError(idx, 0, kidDicts.size());\n      }\n      kidDicts.remove(idx);\n    }\n  };\n  PDFAcroTerminal.prototype.normalizedEntries = function () {\n    var Kids = this.Kids();\n    // If this field is itself a widget (because it was only rendered once in\n    // the document, so the field and widget properties were merged) then we\n    // add itself to the `Kids` array. The alternative would be to try\n    // splitting apart the widget properties and creating a separate object\n    // for them.\n    if (!Kids) {\n      Kids = this.dict.context.obj([this.ref]);\n      this.dict.set(PDFName.of('Kids'), Kids);\n    }\n    return {\n      Kids: Kids\n    };\n  };\n  PDFAcroTerminal.fromDict = function (dict, ref) {\n    return new PDFAcroTerminal(dict, ref);\n  };\n  return PDFAcroTerminal;\n}(PDFAcroField);\nexport default PDFAcroTerminal;","map":{"version":3,"names":["PDFDict","PDFName","PDFAcroField","PDFWidgetAnnotation","IndexOutOfBoundsError","PDFAcroTerminal","_super","__extends","prototype","FT","nameOrRef","getInheritableAttribute","of","dict","context","lookup","getWidgets","kidDicts","Kids","fromDict","widgets","Array","size","idx","len","addWidget","ref","normalizedEntries","push","removeWidget","setKids","remove","obj","set"],"sources":["C:\\Users\\Uzer\\Desktop\\works\\flyticket\\frontend\\flyticket\\node_modules\\pdf-lib\\src\\core\\acroform\\PDFAcroTerminal.ts"],"sourcesContent":["import PDFDict from 'src/core/objects/PDFDict';\r\nimport PDFName from 'src/core/objects/PDFName';\r\nimport PDFRef from 'src/core/objects/PDFRef';\r\nimport PDFAcroField from 'src/core/acroform/PDFAcroField';\r\nimport PDFWidgetAnnotation from 'src/core/annotation/PDFWidgetAnnotation';\r\nimport { IndexOutOfBoundsError } from 'src/core/errors';\r\n\r\nclass PDFAcroTerminal extends PDFAcroField {\r\n  static fromDict = (dict: PDFDict, ref: PDFRef) =>\r\n    new PDFAcroTerminal(dict, ref);\r\n\r\n  FT(): PDFName {\r\n    const nameOrRef = this.getInheritableAttribute(PDFName.of('FT'));\r\n    return this.dict.context.lookup(nameOrRef, PDFName);\r\n  }\r\n\r\n  getWidgets(): PDFWidgetAnnotation[] {\r\n    const kidDicts = this.Kids();\r\n\r\n    // This field is itself a widget\r\n    if (!kidDicts) return [PDFWidgetAnnotation.fromDict(this.dict)];\r\n\r\n    // This field's kids are its widgets\r\n    const widgets = new Array<PDFWidgetAnnotation>(kidDicts.size());\r\n    for (let idx = 0, len = kidDicts.size(); idx < len; idx++) {\r\n      const dict = kidDicts.lookup(idx, PDFDict);\r\n      widgets[idx] = PDFWidgetAnnotation.fromDict(dict);\r\n    }\r\n\r\n    return widgets;\r\n  }\r\n\r\n  addWidget(ref: PDFRef) {\r\n    const { Kids } = this.normalizedEntries();\r\n    Kids.push(ref);\r\n  }\r\n\r\n  removeWidget(idx: number) {\r\n    const kidDicts = this.Kids();\r\n\r\n    if (!kidDicts) {\r\n      // This field is itself a widget\r\n      if (idx !== 0) throw new IndexOutOfBoundsError(idx, 0, 0);\r\n      this.setKids([]);\r\n    } else {\r\n      // This field's kids are its widgets\r\n      if (idx < 0 || idx > kidDicts.size()) {\r\n        throw new IndexOutOfBoundsError(idx, 0, kidDicts.size());\r\n      }\r\n      kidDicts.remove(idx);\r\n    }\r\n  }\r\n\r\n  normalizedEntries() {\r\n    let Kids = this.Kids();\r\n\r\n    // If this field is itself a widget (because it was only rendered once in\r\n    // the document, so the field and widget properties were merged) then we\r\n    // add itself to the `Kids` array. The alternative would be to try\r\n    // splitting apart the widget properties and creating a separate object\r\n    // for them.\r\n    if (!Kids) {\r\n      Kids = this.dict.context.obj([this.ref]);\r\n      this.dict.set(PDFName.of('Kids'), Kids);\r\n    }\r\n\r\n    return { Kids };\r\n  }\r\n}\r\n\r\nexport default PDFAcroTerminal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}