{"ast":null,"code":"var _jsxFileName = \"C:\\\\oleg\\\\flyticket\\\\frontend\\\\flyticket\\\\src\\\\pages\\\\MainPage.tsx\",\n  _s = $RefreshSig$();\n// MainPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport FlightCard from '../components/FlightCard';\n\n/* Код из ChatGPT, где происходит инициализация полученных данных в формате json */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightsList = () => {\n  _s();\n  const [flights, setFlights] = useState([]);\n  useEffect(() => {\n    fetch('/path/to/data.json').then(response => response.json()).then(data => setFlights(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0420\\u0435\\u0439\\u0441: \", flight.flightNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0442: \", flight.departure]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041A\\u0443\\u0434\\u0430: \", flight.arrival]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0414\\u0430\\u0442\\u0430: \", flight.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F: \", flight.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, flight.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightsList, \"YkaBEB7rvMCgao95TwXfNB7bv6I=\");\n_c = FlightsList;\nexport default FlightsList;\nconst flights = [{\n  id: 1,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Корея',\n  date: '2023-11-10',\n  time: '10:00',\n  flightNumber: 'A1 234'\n}, {\n  id: 2,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Казань',\n  date: '2023-11-12',\n  time: '13:30',\n  flightNumber: 'A1 543'\n}, {\n  id: 3,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Сочи',\n  date: '2023-11-15',\n  time: '17:00',\n  flightNumber: 'A1 838'\n}, {\n  id: 4,\n  departure: 'Алматы',\n  arrival: 'Москва',\n  date: '2023-11-20',\n  time: '08:45',\n  flightNumber: 'A1 148'\n}, {\n  id: 5,\n  departure: 'Актау',\n  arrival: 'Екатеринбург',\n  date: '2023-11-22',\n  time: '15:30',\n  flightNumber: 'A1 455'\n}, {\n  id: 6,\n  departure: 'Шымкент',\n  arrival: 'Сочи',\n  date: '2023-11-25',\n  time: '18:20',\n  flightNumber: 'A1 980'\n}, {\n  id: 7,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Новосибирск',\n  date: '2023-11-30',\n  time: '09:15',\n  flightNumber: 'A1 148'\n}, {\n  id: 8,\n  departure: 'Актобе',\n  arrival: 'Казань',\n  date: '2023-12-02',\n  time: '12:00',\n  flightNumber: 'A1 732'\n}, {\n  id: 9,\n  departure: 'Алматы',\n  arrival: 'Санкт-Петербург',\n  date: '2023-12-05',\n  time: '16:45',\n  flightNumber: 'A1 590'\n}, {\n  id: 10,\n  departure: 'Шымкент',\n  arrival: 'Москва',\n  date: '2023-12-07',\n  time: '20:30',\n  flightNumber: 'A1 167'\n}];\nconst MainPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.flightsContainer,\n      children: flights.map(FlightDetailsPage => /*#__PURE__*/_jsxDEV(FlightCard, {\n        ...FlightDetailsPage\n      }, FlightDetailsPage.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MainPage;\nconst styles = {\n  pageContainer: {\n    backgroundColor: '#e0f7fa'\n  },\n  flightsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n    gap: '1rem',\n    padding: '2rem'\n  }\n};\nexport default MainPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"FlightsList\");\n$RefreshReg$(_c2, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Header","FlightCard","jsxDEV","_jsxDEV","FlightsList","_s","flights","setFlights","fetch","then","response","json","data","children","map","flight","flightNumber","fileName","_jsxFileName","lineNumber","columnNumber","departure","arrival","date","time","id","_c","MainPage","style","styles","pageContainer","flightsContainer","FlightDetailsPage","_c2","backgroundColor","display","gridTemplateColumns","gap","padding","$RefreshReg$"],"sources":["C:/oleg/flyticket/frontend/flyticket/src/pages/MainPage.tsx"],"sourcesContent":["// MainPage.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport FlightCard from '../components/FlightCard';\r\n\r\n/* Код из ChatGPT, где происходит инициализация полученных данных в формате json */\r\n\r\nconst FlightsList: React.FC = () => {\r\n  const [flights, setFlights] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/path/to/data.json')\r\n      .then(response => response.json())\r\n      .then(data => setFlights(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {flights.map(flight => (\r\n        <div key={flight.id}>\r\n          <p>Рейс: {flight.flightNumber}</p>\r\n          <p>От: {flight.departure}</p>\r\n          <p>Куда: {flight.arrival}</p>\r\n          <p>Дата: {flight.date}</p>\r\n          <p>Время: {flight.time}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightsList;\r\n\r\n\r\nconst flights = [\r\n  { id: 1, departure: 'Нурсултан Назарбаев', arrival: 'Корея', date: '2023-11-10', time: '10:00', flightNumber: 'A1 234' },\r\n  { id: 2, departure: 'Нурсултан Назарбаев', arrival: 'Казань', date: '2023-11-12', time: '13:30', flightNumber: 'A1 543' },\r\n  { id: 3, departure: 'Нурсултан Назарбаев', arrival: 'Сочи', date: '2023-11-15', time: '17:00', flightNumber: 'A1 838' },\r\n  { id: 4, departure: 'Алматы', arrival: 'Москва', date: '2023-11-20', time: '08:45', flightNumber: 'A1 148' },\r\n  { id: 5, departure: 'Актау', arrival: 'Екатеринбург', date: '2023-11-22', time: '15:30', flightNumber: 'A1 455' },\r\n  { id: 6, departure: 'Шымкент', arrival: 'Сочи', date: '2023-11-25', time: '18:20', flightNumber: 'A1 980' },\r\n  { id: 7, departure: 'Нурсултан Назарбаев', arrival: 'Новосибирск', date: '2023-11-30', time: '09:15', flightNumber: 'A1 148' },\r\n  { id: 8, departure: 'Актобе', arrival: 'Казань', date: '2023-12-02', time: '12:00', flightNumber: 'A1 732' },\r\n  { id: 9, departure: 'Алматы', arrival: 'Санкт-Петербург', date: '2023-12-05', time: '16:45', flightNumber: 'A1 590' },\r\n  { id: 10, departure: 'Шымкент', arrival: 'Москва', date: '2023-12-07', time: '20:30', flightNumber: 'A1 167' },\r\n];\r\n\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <div style={styles.pageContainer}>\r\n      <Header />\r\n      <div style={styles.flightsContainer}>\r\n        {flights.map((FlightDetailsPage) => (\r\n          <FlightCard key={FlightDetailsPage.id} {...FlightDetailsPage} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  pageContainer: {\r\n    backgroundColor: '#e0f7fa',\r\n  },\r\n  flightsContainer: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\r\n    gap: '1rem',\r\n    padding: '2rem',\r\n  },\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}