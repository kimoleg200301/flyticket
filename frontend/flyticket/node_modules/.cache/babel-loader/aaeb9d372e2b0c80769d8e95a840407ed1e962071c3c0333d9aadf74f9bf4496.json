{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFStream from \"./PDFStream\";\nimport { arrayAsString } from \"../../utils\";\nvar PDFRawStream = /** @class */function (_super) {\n  __extends(PDFRawStream, _super);\n  function PDFRawStream(dict, contents) {\n    var _this = _super.call(this, dict) || this;\n    _this.contents = contents;\n    return _this;\n  }\n  PDFRawStream.prototype.asUint8Array = function () {\n    return this.contents.slice();\n  };\n  PDFRawStream.prototype.clone = function (context) {\n    return PDFRawStream.of(this.dict.clone(context), this.contents.slice());\n  };\n  PDFRawStream.prototype.getContentsString = function () {\n    return arrayAsString(this.contents);\n  };\n  PDFRawStream.prototype.getContents = function () {\n    return this.contents;\n  };\n  PDFRawStream.prototype.getContentsSize = function () {\n    return this.contents.length;\n  };\n  PDFRawStream.of = function (dict, contents) {\n    return new PDFRawStream(dict, contents);\n  };\n  return PDFRawStream;\n}(PDFStream);\nexport default PDFRawStream;","map":{"version":3,"names":["PDFStream","arrayAsString","PDFRawStream","_super","__extends","dict","contents","_this","call","prototype","asUint8Array","slice","clone","context","of","getContentsString","getContents","getContentsSize","length"],"sources":["C:\\Users\\Uzer\\Desktop\\works\\flyticket\\frontend\\flyticket\\node_modules\\pdf-lib\\src\\core\\objects\\PDFRawStream.ts"],"sourcesContent":["import PDFDict from 'src/core/objects/PDFDict';\r\nimport PDFStream from 'src/core/objects/PDFStream';\r\nimport PDFContext from 'src/core/PDFContext';\r\nimport { arrayAsString } from 'src/utils';\r\n\r\nclass PDFRawStream extends PDFStream {\r\n  static of = (dict: PDFDict, contents: Uint8Array) =>\r\n    new PDFRawStream(dict, contents);\r\n\r\n  readonly contents: Uint8Array;\r\n\r\n  private constructor(dict: PDFDict, contents: Uint8Array) {\r\n    super(dict);\r\n    this.contents = contents;\r\n  }\r\n\r\n  asUint8Array(): Uint8Array {\r\n    return this.contents.slice();\r\n  }\r\n\r\n  clone(context?: PDFContext): PDFRawStream {\r\n    return PDFRawStream.of(this.dict.clone(context), this.contents.slice());\r\n  }\r\n\r\n  getContentsString(): string {\r\n    return arrayAsString(this.contents);\r\n  }\r\n\r\n  getContents(): Uint8Array {\r\n    return this.contents;\r\n  }\r\n\r\n  getContentsSize(): number {\r\n    return this.contents.length;\r\n  }\r\n}\r\n\r\nexport default PDFRawStream;\r\n"],"mappings":";AACA,OAAOA,SAAS;AAEhB,SAASC,aAAa,QAAE;AAExB,IAAAC,YAAA,0BAAAC,MAAA;EAA2BC,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAMzB,SAAAD,aAAoBG,IAAa,EAAEC,QAAoB;IAAvD,IAAAC,KAAA,GACEJ,MAAA,CAAAK,IAAA,OAAMH,IAAI,CAAC;IACXE,KAAI,CAACD,QAAQ,GAAGA,QAAQ;;EAC1B;EAEAJ,YAAA,CAAAO,SAAA,CAAAC,YAAY,GAAZ;IACE,OAAO,IAAI,CAACJ,QAAQ,CAACK,KAAK,EAAE;EAC9B,CAAC;EAEDT,YAAA,CAAAO,SAAA,CAAAG,KAAK,GAAL,UAAMC,OAAoB;IACxB,OAAOX,YAAY,CAACY,EAAE,CAAC,IAAI,CAACT,IAAI,CAACO,KAAK,CAACC,OAAO,CAAC,EAAE,IAAI,CAACP,QAAQ,CAACK,KAAK,EAAE,CAAC;EACzE,CAAC;EAEDT,YAAA,CAAAO,SAAA,CAAAM,iBAAiB,GAAjB;IACE,OAAOd,aAAa,CAAC,IAAI,CAACK,QAAQ,CAAC;EACrC,CAAC;EAEDJ,YAAA,CAAAO,SAAA,CAAAO,WAAW,GAAX;IACE,OAAO,IAAI,CAACV,QAAQ;EACtB,CAAC;EAEDJ,YAAA,CAAAO,SAAA,CAAAQ,eAAe,GAAf;IACE,OAAO,IAAI,CAACX,QAAQ,CAACY,MAAM;EAC7B,CAAC;EA5BMhB,YAAA,CAAAY,EAAE,GAAG,UAACT,IAAa,EAAEC,QAAoB;IAC9C,WAAIJ,YAAY,CAACG,IAAI,EAAEC,QAAQ,CAAC;EAAhC,CAAgC;EA4BpC,OAAAJ,YAAC;CAAA,CA9B0BF,SAAS;AAgCpC,eAAeE,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}