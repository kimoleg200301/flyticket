{"ast":null,"code":"var _jsxFileName = \"D:\\\\works\\\\flyticket\\\\frontend\\\\flyticket\\\\src\\\\pages\\\\MainPage.tsx\";\n// MainPage.tsx\nimport React from 'react';\nimport Header from '../components/Header';\nimport FlightCard from '../components/FlightCard';\n\n/* Код из ChatGPT, где происходит инициализация полученных данных в формате json\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst FlightsList: React.FC = () => {\r\n  const [flights, setFlights] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/path/to/data.json')\r\n      .then(response => response.json())\r\n      .then(data => setFlights(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {flights.map(flight => (\r\n        <div key={flight.id}>\r\n          <p>Рейс: {flight.flightNumber}</p>\r\n          <p>От: {flight.departure}</p>\r\n          <p>Куда: {flight.arrival}</p>\r\n          <p>Дата: {flight.date}</p>\r\n          <p>Время: {flight.time}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightsList;\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flights = [{\n  id: 1,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Корея',\n  date: '2023-11-10',\n  time: '10:00',\n  flightNumber: 'A1 234'\n}, {\n  id: 2,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Казань',\n  date: '2023-11-12',\n  time: '13:30',\n  flightNumber: 'A1 543'\n}, {\n  id: 3,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Сочи',\n  date: '2023-11-15',\n  time: '17:00',\n  flightNumber: 'A1 838'\n}, {\n  id: 4,\n  departure: 'Алматы',\n  arrival: 'Москва',\n  date: '2023-11-20',\n  time: '08:45',\n  flightNumber: 'A1 148'\n}, {\n  id: 5,\n  departure: 'Актау',\n  arrival: 'Екатеринбург',\n  date: '2023-11-22',\n  time: '15:30',\n  flightNumber: 'A1 455'\n}, {\n  id: 6,\n  departure: 'Шымкент',\n  arrival: 'Сочи',\n  date: '2023-11-25',\n  time: '18:20',\n  flightNumber: 'A1 980'\n}, {\n  id: 7,\n  departure: 'Нурсултан Назарбаев',\n  arrival: 'Новосибирск',\n  date: '2023-11-30',\n  time: '09:15',\n  flightNumber: 'A1 148'\n}, {\n  id: 8,\n  departure: 'Актобе',\n  arrival: 'Казань',\n  date: '2023-12-02',\n  time: '12:00',\n  flightNumber: 'A1 732'\n}, {\n  id: 9,\n  departure: 'Алматы',\n  arrival: 'Санкт-Петербург',\n  date: '2023-12-05',\n  time: '16:45',\n  flightNumber: 'A1 590'\n}, {\n  id: 10,\n  departure: 'Шымкент',\n  arrival: 'Москва',\n  date: '2023-12-07',\n  time: '20:30',\n  flightNumber: 'A1 167'\n}];\nconst MainPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.flightsContainer,\n      children: flights.map(FlightDetailsPage => /*#__PURE__*/_jsxDEV(FlightCard, {\n        ...FlightDetailsPage\n      }, FlightDetailsPage.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = MainPage;\nconst styles = {\n  pageContainer: {\n    backgroundColor: '#e0f7fa'\n  },\n  flightsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n    gap: '1rem',\n    padding: '2rem'\n  }\n};\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","Header","FlightCard","jsxDEV","_jsxDEV","flights","id","departure","arrival","date","time","flightNumber","MainPage","style","styles","pageContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","flightsContainer","map","FlightDetailsPage","_c","backgroundColor","display","gridTemplateColumns","gap","padding","$RefreshReg$"],"sources":["D:/works/flyticket/frontend/flyticket/src/pages/MainPage.tsx"],"sourcesContent":["// MainPage.tsx\r\nimport React from 'react';\r\nimport Header from '../components/Header';\r\nimport FlightCard from '../components/FlightCard';\r\n\r\n/* Код из ChatGPT, где происходит инициализация полученных данных в формате json\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst FlightsList: React.FC = () => {\r\n  const [flights, setFlights] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/path/to/data.json')\r\n      .then(response => response.json())\r\n      .then(data => setFlights(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {flights.map(flight => (\r\n        <div key={flight.id}>\r\n          <p>Рейс: {flight.flightNumber}</p>\r\n          <p>От: {flight.departure}</p>\r\n          <p>Куда: {flight.arrival}</p>\r\n          <p>Дата: {flight.date}</p>\r\n          <p>Время: {flight.time}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightsList;\r\n*/\r\n\r\nconst flights = [\r\n  { id: 1, departure: 'Нурсултан Назарбаев', arrival: 'Корея', date: '2023-11-10', time: '10:00', flightNumber: 'A1 234' },\r\n  { id: 2, departure: 'Нурсултан Назарбаев', arrival: 'Казань', date: '2023-11-12', time: '13:30', flightNumber: 'A1 543' },\r\n  { id: 3, departure: 'Нурсултан Назарбаев', arrival: 'Сочи', date: '2023-11-15', time: '17:00', flightNumber: 'A1 838' },\r\n  { id: 4, departure: 'Алматы', arrival: 'Москва', date: '2023-11-20', time: '08:45', flightNumber: 'A1 148' },\r\n  { id: 5, departure: 'Актау', arrival: 'Екатеринбург', date: '2023-11-22', time: '15:30', flightNumber: 'A1 455' },\r\n  { id: 6, departure: 'Шымкент', arrival: 'Сочи', date: '2023-11-25', time: '18:20', flightNumber: 'A1 980' },\r\n  { id: 7, departure: 'Нурсултан Назарбаев', arrival: 'Новосибирск', date: '2023-11-30', time: '09:15', flightNumber: 'A1 148' },\r\n  { id: 8, departure: 'Актобе', arrival: 'Казань', date: '2023-12-02', time: '12:00', flightNumber: 'A1 732' },\r\n  { id: 9, departure: 'Алматы', arrival: 'Санкт-Петербург', date: '2023-12-05', time: '16:45', flightNumber: 'A1 590' },\r\n  { id: 10, departure: 'Шымкент', arrival: 'Москва', date: '2023-12-07', time: '20:30', flightNumber: 'A1 167' },\r\n];\r\n\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <div style={styles.pageContainer}>\r\n      <Header />\r\n      <div style={styles.flightsContainer}>\r\n        {flights.map((FlightDetailsPage) => (\r\n          <FlightCard key={FlightDetailsPage.id} {...FlightDetailsPage} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  pageContainer: {\r\n    backgroundColor: '#e0f7fa',\r\n  },\r\n  flightsContainer: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\r\n    gap: '1rem',\r\n    padding: '2rem',\r\n  },\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA,SAAAC,MAAA,IAAAC,OAAA;AA8BA,MAAMC,OAAO,GAAG,CACd;EAAEC,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,qBAAqB;EAAEC,OAAO,EAAE,OAAO;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EACxH;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,qBAAqB;EAAEC,OAAO,EAAE,QAAQ;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EACzH;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,qBAAqB;EAAEC,OAAO,EAAE,MAAM;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EACvH;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,QAAQ;EAAEC,OAAO,EAAE,QAAQ;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EAC5G;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,OAAO;EAAEC,OAAO,EAAE,cAAc;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EACjH;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,SAAS;EAAEC,OAAO,EAAE,MAAM;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EAC3G;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,qBAAqB;EAAEC,OAAO,EAAE,aAAa;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EAC9H;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,QAAQ;EAAEC,OAAO,EAAE,QAAQ;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EAC5G;EAAEL,EAAE,EAAE,CAAC;EAAEC,SAAS,EAAE,QAAQ;EAAEC,OAAO,EAAE,iBAAiB;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,EACrH;EAAEL,EAAE,EAAE,EAAE;EAAEC,SAAS,EAAE,SAAS;EAAEC,OAAO,EAAE,QAAQ;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,OAAO;EAAEC,YAAY,EAAE;AAAS,CAAC,CAC/G;AAED,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAC/B,oBACER,OAAA;IAAKS,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAAC,QAAA,gBAC/BZ,OAAA,CAACH,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhB,OAAA;MAAKS,KAAK,EAAEC,MAAM,CAACO,gBAAiB;MAAAL,QAAA,EACjCX,OAAO,CAACiB,GAAG,CAAEC,iBAAiB,iBAC7BnB,OAAA,CAACF,UAAU;QAAA,GAAgCqB;MAAiB,GAA3CA,iBAAiB,CAACjB,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAXIZ,QAAkB;AAaxB,MAAME,MAAM,GAAG;EACbC,aAAa,EAAE;IACbU,eAAe,EAAE;EACnB,CAAC;EACDJ,gBAAgB,EAAE;IAChBK,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,uCAAuC;IAC5DC,GAAG,EAAE,MAAM;IACXC,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAejB,QAAQ;AAAC,IAAAY,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}