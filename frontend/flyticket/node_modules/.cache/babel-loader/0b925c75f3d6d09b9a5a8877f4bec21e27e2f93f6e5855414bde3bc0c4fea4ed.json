{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\n// prettier-ignore\nvar MARKERS = [0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf];\nvar ColorSpace;\n(function (ColorSpace) {\n  ColorSpace[\"DeviceGray\"] = \"DeviceGray\";\n  ColorSpace[\"DeviceRGB\"] = \"DeviceRGB\";\n  ColorSpace[\"DeviceCMYK\"] = \"DeviceCMYK\";\n})(ColorSpace || (ColorSpace = {}));\nvar ChannelToColorSpace = {\n  1: ColorSpace.DeviceGray,\n  3: ColorSpace.DeviceRGB,\n  4: ColorSpace.DeviceCMYK\n};\n/**\r\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\r\n * this class borrows from:\r\n *   https://github.com/foliojs/pdfkit/blob/a6af76467ce06bd6a2af4aa7271ccac9ff152a7d/lib/image/jpeg.js\r\n */\nvar JpegEmbedder = /** @class */function () {\n  function JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace) {\n    this.imageData = imageData;\n    this.bitsPerComponent = bitsPerComponent;\n    this.width = width;\n    this.height = height;\n    this.colorSpace = colorSpace;\n  }\n  JpegEmbedder.for = function (imageData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dataView, soi, pos, marker, bitsPerComponent, height, width, channelByte, channelName, colorSpace;\n      return __generator(this, function (_a) {\n        dataView = new DataView(imageData.buffer);\n        soi = dataView.getUint16(0);\n        if (soi !== 0xffd8) throw new Error('SOI not found in JPEG');\n        pos = 2;\n        while (pos < dataView.byteLength) {\n          marker = dataView.getUint16(pos);\n          pos += 2;\n          if (MARKERS.includes(marker)) break;\n          pos += dataView.getUint16(pos);\n        }\n        if (!MARKERS.includes(marker)) throw new Error('Invalid JPEG');\n        pos += 2;\n        bitsPerComponent = dataView.getUint8(pos++);\n        height = dataView.getUint16(pos);\n        pos += 2;\n        width = dataView.getUint16(pos);\n        pos += 2;\n        channelByte = dataView.getUint8(pos++);\n        channelName = ChannelToColorSpace[channelByte];\n        if (!channelName) throw new Error('Unknown JPEG channel.');\n        colorSpace = channelName;\n        return [2 /*return*/, new JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace)];\n      });\n    });\n  };\n  JpegEmbedder.prototype.embedIntoContext = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var xObject;\n      return __generator(this, function (_a) {\n        xObject = context.stream(this.imageData, {\n          Type: 'XObject',\n          Subtype: 'Image',\n          BitsPerComponent: this.bitsPerComponent,\n          Width: this.width,\n          Height: this.height,\n          ColorSpace: this.colorSpace,\n          Filter: 'DCTDecode',\n          // CMYK JPEG streams in PDF are typically stored complemented,\n          // with 1 as 'off' and 0 as 'on' (PDF 32000-1:2008, 8.6.4.4).\n          //\n          // Standalone CMYK JPEG (usually exported by Photoshop) are\n          // stored inverse, with 0 as 'off' and 1 as 'on', like RGB.\n          //\n          // Applying a swap here as a hedge that most bytes passing\n          // through this method will benefit from it.\n          Decode: this.colorSpace === ColorSpace.DeviceCMYK ? [1, 0, 1, 0, 1, 0, 1, 0] : undefined\n        });\n        if (ref) {\n          context.assign(ref, xObject);\n          return [2 /*return*/, ref];\n        } else {\n          return [2 /*return*/, context.register(xObject)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  return JpegEmbedder;\n}();\nexport default JpegEmbedder;","map":{"version":3,"names":["MARKERS","ColorSpace","ChannelToColorSpace","DeviceGray","DeviceRGB","DeviceCMYK","JpegEmbedder","imageData","bitsPerComponent","width","height","colorSpace","for","dataView","DataView","buffer","soi","getUint16","Error","pos","byteLength","marker","includes","getUint8","channelByte","channelName","prototype","embedIntoContext","context","ref","xObject","stream","Type","Subtype","BitsPerComponent","Width","Height","Filter","Decode","undefined","assign","register"],"sources":["C:\\oleg\\flyticket\\frontend\\flyticket\\node_modules\\pdf-lib\\src\\core\\embedders\\JpegEmbedder.ts"],"sourcesContent":["import PDFRef from 'src/core/objects/PDFRef';\r\nimport PDFContext from 'src/core/PDFContext';\r\n\r\n// prettier-ignore\r\nconst MARKERS = [\r\n  0xffc0, 0xffc1, 0xffc2,\r\n  0xffc3, 0xffc5, 0xffc6,\r\n  0xffc7, 0xffc8, 0xffc9,\r\n  0xffca, 0xffcb, 0xffcc,\r\n  0xffcd, 0xffce, 0xffcf,\r\n];\r\n\r\nenum ColorSpace {\r\n  DeviceGray = 'DeviceGray',\r\n  DeviceRGB = 'DeviceRGB',\r\n  DeviceCMYK = 'DeviceCMYK',\r\n}\r\n\r\nconst ChannelToColorSpace: { [idx: number]: ColorSpace | undefined } = {\r\n  1: ColorSpace.DeviceGray,\r\n  3: ColorSpace.DeviceRGB,\r\n  4: ColorSpace.DeviceCMYK,\r\n};\r\n\r\n/**\r\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\r\n * this class borrows from:\r\n *   https://github.com/foliojs/pdfkit/blob/a6af76467ce06bd6a2af4aa7271ccac9ff152a7d/lib/image/jpeg.js\r\n */\r\nclass JpegEmbedder {\r\n  static async for(imageData: Uint8Array) {\r\n    const dataView = new DataView(imageData.buffer);\r\n\r\n    const soi = dataView.getUint16(0);\r\n    if (soi !== 0xffd8) throw new Error('SOI not found in JPEG');\r\n\r\n    let pos = 2;\r\n    let marker: number;\r\n\r\n    while (pos < dataView.byteLength) {\r\n      marker = dataView.getUint16(pos);\r\n      pos += 2;\r\n      if (MARKERS.includes(marker)) break;\r\n      pos += dataView.getUint16(pos);\r\n    }\r\n\r\n    if (!MARKERS.includes(marker!)) throw new Error('Invalid JPEG');\r\n    pos += 2;\r\n\r\n    const bitsPerComponent = dataView.getUint8(pos++);\r\n    const height = dataView.getUint16(pos);\r\n    pos += 2;\r\n\r\n    const width = dataView.getUint16(pos);\r\n    pos += 2;\r\n\r\n    const channelByte = dataView.getUint8(pos++);\r\n    const channelName = ChannelToColorSpace[channelByte];\r\n\r\n    if (!channelName) throw new Error('Unknown JPEG channel.');\r\n\r\n    const colorSpace = channelName;\r\n\r\n    return new JpegEmbedder(\r\n      imageData,\r\n      bitsPerComponent,\r\n      width,\r\n      height,\r\n      colorSpace,\r\n    );\r\n  }\r\n\r\n  readonly bitsPerComponent: number;\r\n  readonly height: number;\r\n  readonly width: number;\r\n  readonly colorSpace: ColorSpace;\r\n\r\n  private readonly imageData: Uint8Array;\r\n\r\n  private constructor(\r\n    imageData: Uint8Array,\r\n    bitsPerComponent: number,\r\n    width: number,\r\n    height: number,\r\n    colorSpace: ColorSpace,\r\n  ) {\r\n    this.imageData = imageData;\r\n    this.bitsPerComponent = bitsPerComponent;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.colorSpace = colorSpace;\r\n  }\r\n\r\n  async embedIntoContext(context: PDFContext, ref?: PDFRef): Promise<PDFRef> {\r\n    const xObject = context.stream(this.imageData, {\r\n      Type: 'XObject',\r\n      Subtype: 'Image',\r\n      BitsPerComponent: this.bitsPerComponent,\r\n      Width: this.width,\r\n      Height: this.height,\r\n      ColorSpace: this.colorSpace,\r\n      Filter: 'DCTDecode',\r\n\r\n      // CMYK JPEG streams in PDF are typically stored complemented,\r\n      // with 1 as 'off' and 0 as 'on' (PDF 32000-1:2008, 8.6.4.4).\r\n      //\r\n      // Standalone CMYK JPEG (usually exported by Photoshop) are\r\n      // stored inverse, with 0 as 'off' and 1 as 'on', like RGB.\r\n      //\r\n      // Applying a swap here as a hedge that most bytes passing\r\n      // through this method will benefit from it.\r\n      Decode:\r\n        this.colorSpace === ColorSpace.DeviceCMYK\r\n          ? [1, 0, 1, 0, 1, 0, 1, 0]\r\n          : undefined,\r\n    });\r\n\r\n    if (ref) {\r\n      context.assign(ref, xObject);\r\n      return ref;\r\n    } else {\r\n      return context.register(xObject);\r\n    }\r\n  }\r\n}\r\n\r\nexport default JpegEmbedder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}