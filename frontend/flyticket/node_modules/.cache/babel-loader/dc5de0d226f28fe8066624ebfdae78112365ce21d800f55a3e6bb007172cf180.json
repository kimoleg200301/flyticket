{"ast":null,"code":"var _jsxFileName = \"C:\\\\oleg\\\\flyticket\\\\frontend\\\\flyticket\\\\src\\\\pages\\\\MainPage.tsx\",\n  _s = $RefreshSig$();\n// MainPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/* Код из ChatGPT, где происходит инициализация полученных данных в формате json */\n\nconst MainPage = () => {\n  _s();\n  const [flights, setFlights] = useState([]);\n  useEffect(() => {\n    fetch('../data/flights.json').then(res => res.json()).then(data => setFlights(data)).catch(error => console.error(error));\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   {flights.map(flight => (\n    //     <div key={flight.id}>\n    //       <p>Рейс: {flight.flightNumber}</p>\n    //       <p>От: {flight.departure}</p>\n    //       <p>Куда: {flight.arrival}</p>\n    //       <p>Дата: {flight.date}</p>\n    //       <p>Время: {flight.time}</p>\n    //     </div>\n    //   ))}\n    // </div>\n    _jsxDEV(\"div\", {\n      children: flights\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n/*const flights = [\r\n  { id: 1, departure: 'Нурсултан Назарбаев', arrival: 'Корея', date: '2023-11-10', time: '10:00', flightNumber: 'A1 234' },\r\n  { id: 2, departure: 'Нурсултан Назарбаев', arrival: 'Казань', date: '2023-11-12', time: '13:30', flightNumber: 'A1 543' },\r\n  { id: 3, departure: 'Нурсултан Назарбаев', arrival: 'Сочи', date: '2023-11-15', time: '17:00', flightNumber: 'A1 838' },\r\n  { id: 4, departure: 'Алматы', arrival: 'Москва', date: '2023-11-20', time: '08:45', flightNumber: 'A1 148' },\r\n  { id: 5, departure: 'Актау', arrival: 'Екатеринбург', date: '2023-11-22', time: '15:30', flightNumber: 'A1 455' },\r\n  { id: 6, departure: 'Шымкент', arrival: 'Сочи', date: '2023-11-25', time: '18:20', flightNumber: 'A1 980' },\r\n  { id: 7, departure: 'Нурсултан Назарбаев', arrival: 'Новосибирск', date: '2023-11-30', time: '09:15', flightNumber: 'A1 148' },\r\n  { id: 8, departure: 'Актобе', arrival: 'Казань', date: '2023-12-02', time: '12:00', flightNumber: 'A1 732' },\r\n  { id: 9, departure: 'Алматы', arrival: 'Санкт-Петербург', date: '2023-12-05', time: '16:45', flightNumber: 'A1 590' },\r\n  { id: 10, departure: 'Шымкент', arrival: 'Москва', date: '2023-12-07', time: '20:30', flightNumber: 'A1 167' },\r\n];\r\n\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <div style={styles.pageContainer}>\r\n      <Header />\r\n      <div style={styles.flightsContainer}>\r\n        {flights.map((FlightDetailsPage) => (\r\n          <FlightCard key={FlightDetailsPage.id} {...FlightDetailsPage} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};*/\n_s(MainPage, \"YkaBEB7rvMCgao95TwXfNB7bv6I=\");\n_c = MainPage;\nconst styles = {\n  pageContainer: {\n    backgroundColor: '#e0f7fa'\n  },\n  flightsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n    gap: '1rem',\n    padding: '2rem'\n  }\n};\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MainPage","_s","flights","setFlights","fetch","then","res","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","styles","pageContainer","backgroundColor","flightsContainer","display","gridTemplateColumns","gap","padding","$RefreshReg$"],"sources":["C:/oleg/flyticket/frontend/flyticket/src/pages/MainPage.tsx"],"sourcesContent":["// MainPage.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport FlightCard from '../components/FlightCard';\r\nimport { error } from 'console';\r\n\r\n/* Код из ChatGPT, где происходит инициализация полученных данных в формате json */\r\n\r\nconst MainPage: React.FC = () => {\r\n  const [flights, setFlights] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('../data/flights.json')\r\n      .then(res => res.json())\r\n      .then(data => setFlights(data))\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    // <div>\r\n    //   {flights.map(flight => (\r\n    //     <div key={flight.id}>\r\n    //       <p>Рейс: {flight.flightNumber}</p>\r\n    //       <p>От: {flight.departure}</p>\r\n    //       <p>Куда: {flight.arrival}</p>\r\n    //       <p>Дата: {flight.date}</p>\r\n    //       <p>Время: {flight.time}</p>\r\n    //     </div>\r\n    //   ))}\r\n    // </div>\r\n    <div>{flights}</div>\r\n  );\r\n};\r\n\r\n\r\n/*const flights = [\r\n  { id: 1, departure: 'Нурсултан Назарбаев', arrival: 'Корея', date: '2023-11-10', time: '10:00', flightNumber: 'A1 234' },\r\n  { id: 2, departure: 'Нурсултан Назарбаев', arrival: 'Казань', date: '2023-11-12', time: '13:30', flightNumber: 'A1 543' },\r\n  { id: 3, departure: 'Нурсултан Назарбаев', arrival: 'Сочи', date: '2023-11-15', time: '17:00', flightNumber: 'A1 838' },\r\n  { id: 4, departure: 'Алматы', arrival: 'Москва', date: '2023-11-20', time: '08:45', flightNumber: 'A1 148' },\r\n  { id: 5, departure: 'Актау', arrival: 'Екатеринбург', date: '2023-11-22', time: '15:30', flightNumber: 'A1 455' },\r\n  { id: 6, departure: 'Шымкент', arrival: 'Сочи', date: '2023-11-25', time: '18:20', flightNumber: 'A1 980' },\r\n  { id: 7, departure: 'Нурсултан Назарбаев', arrival: 'Новосибирск', date: '2023-11-30', time: '09:15', flightNumber: 'A1 148' },\r\n  { id: 8, departure: 'Актобе', arrival: 'Казань', date: '2023-12-02', time: '12:00', flightNumber: 'A1 732' },\r\n  { id: 9, departure: 'Алматы', arrival: 'Санкт-Петербург', date: '2023-12-05', time: '16:45', flightNumber: 'A1 590' },\r\n  { id: 10, departure: 'Шымкент', arrival: 'Москва', date: '2023-12-07', time: '20:30', flightNumber: 'A1 167' },\r\n];\r\n\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <div style={styles.pageContainer}>\r\n      <Header />\r\n      <div style={styles.flightsContainer}>\r\n        {flights.map((FlightDetailsPage) => (\r\n          <FlightCard key={FlightDetailsPage.id} {...FlightDetailsPage} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};*/\r\n\r\nconst styles = {\r\n  pageContainer: {\r\n    backgroundColor: '#e0f7fa',\r\n  },\r\n  flightsContainer: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\r\n    gap: '1rem',\r\n    padding: '2rem',\r\n  },\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKnD;;AAEA,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,sBAAsB,CAAC,CAC1BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAX,OAAA;MAAAa,QAAA,EAAMV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;AAExB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBAf,EAAA,CA3BMD,QAAkB;AAAAiB,EAAA,GAAlBjB,QAAkB;AAqDxB,MAAMkB,MAAM,GAAG;EACbC,aAAa,EAAE;IACbC,eAAe,EAAE;EACnB,CAAC;EACDC,gBAAgB,EAAE;IAChBC,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,uCAAuC;IAC5DC,GAAG,EAAE,MAAM;IACXC,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAezB,QAAQ;AAAC,IAAAiB,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}