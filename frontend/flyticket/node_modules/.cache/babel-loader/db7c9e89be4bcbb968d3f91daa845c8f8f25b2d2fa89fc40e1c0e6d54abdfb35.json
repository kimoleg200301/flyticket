{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroField from \"./PDFAcroField\";\nvar PDFAcroNonTerminal = /** @class */function (_super) {\n  __extends(PDFAcroNonTerminal, _super);\n  function PDFAcroNonTerminal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroNonTerminal.prototype.addField = function (field) {\n    var Kids = this.normalizedEntries().Kids;\n    Kids === null || Kids === void 0 ? void 0 : Kids.push(field);\n  };\n  PDFAcroNonTerminal.prototype.normalizedEntries = function () {\n    var Kids = this.Kids();\n    if (!Kids) {\n      Kids = this.dict.context.obj([]);\n      this.dict.set(PDFName.of('Kids'), Kids);\n    }\n    return {\n      Kids: Kids\n    };\n  };\n  PDFAcroNonTerminal.fromDict = function (dict, ref) {\n    return new PDFAcroNonTerminal(dict, ref);\n  };\n  PDFAcroNonTerminal.create = function (context) {\n    var dict = context.obj({});\n    var ref = context.register(dict);\n    return new PDFAcroNonTerminal(dict, ref);\n  };\n  return PDFAcroNonTerminal;\n}(PDFAcroField);\nexport default PDFAcroNonTerminal;","map":{"version":3,"names":["PDFName","PDFAcroField","PDFAcroNonTerminal","_super","__extends","prototype","addField","field","Kids","normalizedEntries","push","dict","context","obj","set","of","fromDict","ref","create","register"],"sources":["C:\\oleg\\flyticket\\frontend\\flyticket\\node_modules\\pdf-lib\\src\\core\\acroform\\PDFAcroNonTerminal.ts"],"sourcesContent":["import PDFDict from 'src/core/objects/PDFDict';\r\nimport PDFRef from 'src/core/objects/PDFRef';\r\nimport PDFName from 'src/core/objects/PDFName';\r\nimport PDFContext from 'src/core/PDFContext';\r\nimport PDFAcroField from 'src/core/acroform/PDFAcroField';\r\n\r\nclass PDFAcroNonTerminal extends PDFAcroField {\r\n  static fromDict = (dict: PDFDict, ref: PDFRef) =>\r\n    new PDFAcroNonTerminal(dict, ref);\r\n\r\n  static create = (context: PDFContext) => {\r\n    const dict = context.obj({});\r\n    const ref = context.register(dict);\r\n    return new PDFAcroNonTerminal(dict, ref);\r\n  };\r\n\r\n  addField(field: PDFRef) {\r\n    const { Kids } = this.normalizedEntries();\r\n    Kids?.push(field);\r\n  }\r\n\r\n  normalizedEntries() {\r\n    let Kids = this.Kids();\r\n\r\n    if (!Kids) {\r\n      Kids = this.dict.context.obj([]);\r\n      this.dict.set(PDFName.of('Kids'), Kids);\r\n    }\r\n\r\n    return { Kids };\r\n  }\r\n}\r\n\r\nexport default PDFAcroNonTerminal;\r\n"],"mappings":";AAEA,OAAOA,OAAO;AAEd,OAAOC,YAAY;AAEnB,IAAAC,kBAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,kBAAA,EAAAC,MAAA;EAAjC,SAAAD,mBAAA;;EAyBA;EAfEA,kBAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR,UAASC,KAAa;IACZ,IAAAC,IAAI,GAAK,IAAI,CAACC,iBAAiB,EAAE,CAAAD,IAA7B;IACZA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,IAAI,CAACH,KAAK;EAClB,CAAC;EAEDL,kBAAA,CAAAG,SAAA,CAAAI,iBAAiB,GAAjB;IACE,IAAID,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;IAEtB,IAAI,CAACA,IAAI,EAAE;MACTA,IAAI,GAAG,IAAI,CAACG,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;MAChC,IAAI,CAACF,IAAI,CAACG,GAAG,CAACd,OAAO,CAACe,EAAE,CAAC,MAAM,CAAC,EAAEP,IAAI,CAAC;;IAGzC,OAAO;MAAEA,IAAI,EAAAA;IAAA,CAAE;EACjB,CAAC;EAvBMN,kBAAA,CAAAc,QAAQ,GAAG,UAACL,IAAa,EAAEM,GAAW;IAC3C,WAAIf,kBAAkB,CAACS,IAAI,EAAEM,GAAG,CAAC;EAAjC,CAAiC;EAE5Bf,kBAAA,CAAAgB,MAAM,GAAG,UAACN,OAAmB;IAClC,IAAMD,IAAI,GAAGC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;IAC5B,IAAMI,GAAG,GAAGL,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC;IAClC,OAAO,IAAIT,kBAAkB,CAACS,IAAI,EAAEM,GAAG,CAAC;EAC1C,CAAC;EAiBH,OAAAf,kBAAC;CAAA,CAzBgCD,YAAY;AA2B7C,eAAeC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}